@model IEnumerable<dynamicNSG.Models.Policy>

@{
    ViewBag.Title = "Policy";
}

<h2>Policy</h2>

<br>
<p>This policy leverages dynamic @Html.ActionLink("Groups", "Index", "Groups") to build the basis upon which NSGs will be compiled from</p>
<br>
<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Order)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Action)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Src)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Dst)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Prot)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Range)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Order)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Action)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Src)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Dst)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Prot)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Range)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.Id }) |
            <!--@Html.ActionLink("Details", "Details", new { id=item.Id }) |-->
            @Html.ActionLink("Delete", "Delete", new { id=item.Id })
        </td>
    </tr>
}

</table>
